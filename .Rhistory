# Create igraph object
g <- graph_from_data_frame(edges, directed = FALSE)
# Add edge attributes: Outdegree and Louvain membership
E(g)$weight <- edges$outdegree
E(g)$louvain <- as.factor(edges$louvain)
# Network plot for the current year
plot <- ggraph(g, layout = "fr") +  # "fr" for Fruchterman-Reingold layout
geom_edge_link(aes(width = weight, color = louvain), alpha = 0.7) +
geom_node_point(size = 2, shape = 21, fill = louvain, color = "black") +
geom_node_text(aes(label = name), repel = TRUE, size = 2) +
scale_edge_width(range = c(0.5, 3), guide = "none") +  # Adjust edge thickness range
scale_edge_color_brewer(palette = "Set2") +  # Color edges by Louvain groups
theme_minimal() +
ggtitle(paste("Network Plot for Year", yr)) +
theme_void() +
ggpubr::theme_transparent()
ggsave(paste0("Output/", yr, ".png"), plot, width = 10, height = 6, dpi = 400)
}
# Network plot for the current year
plot <- ggraph(g, layout = "fr") +  # "fr" for Fruchterman-Reingold layout
geom_edge_link(aes(width = weight, color = louvain), alpha = 0.7) +
geom_node_point(size = 2, shape = 21, fill = "white", color = louvain) +
geom_node_text(aes(label = name), repel = TRUE, size = 2) +
scale_edge_width(range = c(0.5, 3), guide = "none") +  # Adjust edge thickness range
scale_edge_color_brewer(palette = "Set2") +  # Color edges by Louvain groups
theme_minimal() +
ggtitle(paste("Network Plot for Year", yr)) +
theme_void() +
ggpubr::theme_transparent()
for (yr in unique_years) {
# Filter data for the current year
year_data <- final_results %>% dplyr::filter(year == yr)
# Create edge list
edges <- year_data %>%
select(from = name, to = det_id, outdegree, louvain)
# Create igraph object
g <- graph_from_data_frame(edges, directed = FALSE)
# Add edge attributes: Outdegree and Louvain membership
E(g)$weight <- edges$outdegree
E(g)$louvain <- as.factor(edges$louvain)
# Network plot for the current year
plot <- ggraph(g, layout = "fr") +  # "fr" for Fruchterman-Reingold layout
geom_edge_link(aes(width = weight, color = louvain), alpha = 0.7) +
geom_node_point(size = 2, shape = 21, fill = "white", color = louvain) +
geom_node_text(aes(label = name), repel = TRUE, size = 2) +
scale_edge_width(range = c(0.5, 3), guide = "none") +  # Adjust edge thickness range
scale_edge_color_brewer(palette = "Set2") +  # Color edges by Louvain groups
theme_minimal() +
ggtitle(paste("Network Plot for Year", yr)) +
theme_void() +
ggpubr::theme_transparent()
ggsave(paste0("Output/", yr, ".png"), plot, width = 10, height = 6, dpi = 400)
}
# Network plot for the current year
plot <- ggraph(g, layout = "fr") +  # "fr" for Fruchterman-Reingold layout
geom_edge_link(aes(width = weight, color = louvain), alpha = 0.7) +
geom_node_point(size = 2, shape = 21, fill = "white", color = louvain) +
geom_node_text(aes(label = name), repel = TRUE, size = 2) +
scale_edge_width(range = c(0.5, 3), guide = "none") +  # Adjust edge thickness range
scale_edge_color_brewer(palette = "Set2") +  # Color edges by Louvain groups
theme_minimal() +
ggtitle(paste("Network Plot for Year", yr)) +
theme_void() +
ggpubr::theme_transparent()
for (yr in unique_years) {
# Filter data for the current year
year_data <- final_results %>% dplyr::filter(year == yr)
# Create edge list
edges <- year_data %>%
select(from = name, to = det_id, outdegree, louvain)
# Create igraph object
g <- graph_from_data_frame(edges, directed = FALSE)
# Add edge attributes: Outdegree and Louvain membership
E(g)$weight <- edges$outdegree
E(g)$louvain <- as.factor(edges$louvain)
# Network plot for the current year
plot <- ggraph(g, layout = "fr") +  # "fr" for Fruchterman-Reingold layout
geom_edge_link(aes(width = weight, color = louvain), alpha = 0.7) +
geom_node_point(size = 2, shape = 21, fill = "white", color = louvain) +
geom_node_text(aes(label = name), repel = TRUE, size = 2) +
scale_edge_width(range = c(0.5, 3), guide = "none") +  # Adjust edge thickness range
scale_edge_color_brewer(palette = "Set2") +  # Color edges by Louvain groups
theme_minimal() +
ggtitle(paste("Network Plot for Year", yr)) +
theme_void() +
ggpubr::theme_transparent()
ggsave(paste0("Output/", yr, ".png"), plot, width = 10, height = 6, dpi = 400)
}
for (yr in unique_years) {
# Filter data for the current year
year_data <- final_results %>% dplyr::filter(year == yr)
# Create edge list
edges <- year_data %>%
select(from = name, to = det_id, outdegree, louvain)
# Create igraph object
g <- graph_from_data_frame(edges, directed = FALSE)
# Add edge attributes: Outdegree and Louvain membership
E(g)$weight <- edges$outdegree
E(g)$louvain <- as.factor(edges$louvain)
# Network plot for the current year
plot <- ggraph(g, layout = "fr") +  # "fr" for Fruchterman-Reingold layout
geom_edge_link(aes(width = weight, color = louvain), alpha = 0.7) +
geom_node_point(size = 2, shape = 21, fill = "white", color = as.factor(louvain), show.legend = F) +
geom_node_text(aes(label = name), repel = TRUE, size = 2) +
scale_edge_width(range = c(0.5, 3), guide = "none") +  # Adjust edge thickness range
scale_edge_color_brewer(palette = "Set2") +  # Color edges by Louvain groups
theme_minimal() +
ggtitle(paste("Network Plot for Year", yr)) +
theme_void() +
ggpubr::theme_transparent()
ggsave(paste0("Output/", yr, ".png"), plot, width = 10, height = 6, dpi = 400)
}
for (yr in unique_years) {
# Filter data for the current year
year_data <- final_results %>% dplyr::filter(year == yr)
# Create edge list
edges <- year_data %>%
select(from = name, to = det_id, outdegree, louvain)
# Create igraph object
g <- graph_from_data_frame(edges, directed = FALSE)
# Add edge attributes: Outdegree and Louvain membership
E(g)$weight <- edges$outdegree
E(g)$louvain <- as.factor(edges$louvain)
# Network plot for the current year
plot <- ggraph(g, layout = "fr") +  # "fr" for Fruchterman-Reingold layout
geom_edge_link(aes(width = weight, color = louvain), alpha = 0.7) +
geom_node_point(aes(color = louvain), size = 2, shape = 21, fill = "white", show.legend = F) +
geom_node_text(aes(label = name), repel = TRUE, size = 2) +
scale_edge_width(range = c(0.5, 3), guide = "none") +  # Adjust edge thickness range
scale_edge_color_brewer(palette = "Set2") +  # Color edges by Louvain groups
theme_minimal() +
ggtitle(paste("Network Plot for Year", yr)) +
theme_void() +
ggpubr::theme_transparent()
ggsave(paste0("Output/", yr, ".png"), plot, width = 10, height = 6, dpi = 400)
}
??geom_node_point()
# Network plot for the current year
plot <- ggraph(g, layout = "fr") +  # "fr" for Fruchterman-Reingold layout
geom_edge_link(aes(width = weight, color = louvain), alpha = 0.7) +
geom_node_point(aes(size = weight), shape = 21, fill = "white", show.legend = F) +
geom_node_text(aes(label = name), repel = TRUE, size = 2) +
scale_edge_width(range = c(0.5, 3), guide = "none") +  # Adjust edge thickness range
scale_edge_color_brewer(palette = "Set2") +  # Color edges by Louvain groups
theme_minimal() +
ggtitle(paste("Network Plot for Year", yr)) +
theme_void() +
ggpubr::theme_transparent()
for (yr in unique_years) {
# Filter data for the current year
year_data <- final_results %>% dplyr::filter(year == yr)
# Create edge list
edges <- year_data %>%
select(from = name, to = det_id, outdegree, louvain)
# Create igraph object
g <- graph_from_data_frame(edges, directed = FALSE)
# Add edge attributes: Outdegree and Louvain membership
E(g)$weight <- edges$outdegree
E(g)$louvain <- as.factor(edges$louvain)
# Network plot for the current year
plot <- ggraph(g, layout = "fr") +  # "fr" for Fruchterman-Reingold layout
geom_edge_link(aes(width = weight, color = louvain), alpha = 0.7) +
geom_node_point(aes(size = weight), shape = 21, fill = "white", show.legend = F) +
geom_node_text(aes(label = name), repel = TRUE, size = 2) +
scale_edge_width(range = c(0.5, 3), guide = "none") +  # Adjust edge thickness range
scale_edge_color_brewer(palette = "Set2") +  # Color edges by Louvain groups
theme_minimal() +
ggtitle(paste("Network Plot for Year", yr)) +
theme_void() +
ggpubr::theme_transparent()
ggsave(paste0("Output/", yr, ".png"), plot, width = 10, height = 6, dpi = 400)
}
# Iterate over each year to create network plots
unique_years <- unique(final_results$year)
for (yr in unique_years) {
# Filter data for the current year
year_data <- final_results %>% dplyr::filter(year == yr)
# Create edge list
edges <- year_data %>%
select(from = name, to = det_id, outdegree, louvain)
# Create igraph object
g <- graph_from_data_frame(edges, directed = FALSE)
# Add edge attributes: Outdegree and Louvain membership
E(g)$weight <- edges$outdegree
E(g)$louvain <- as.factor(edges$louvain)
# Network plot for the current year
plot <- g |> ggraph(layout = "fr") +  # "fr" for Fruchterman-Reingold layout
geom_edge_link(aes(width = weight, color = louvain), alpha = 0.7) +
geom_node_point(aes(size = weight), shape = 21, fill = "white", show.legend = F) +
geom_node_text(aes(label = name), repel = TRUE, size = 2) +
scale_edge_width(range = c(0.5, 3), guide = "none") +  # Adjust edge thickness range
scale_edge_color_brewer(palette = "Set2") +  # Color edges by Louvain groups
theme_minimal() +
ggtitle(paste("Network Plot for Year", yr)) +
theme_void() +
ggpubr::theme_transparent()
ggsave(paste0("Output/", yr, ".png"), plot, width = 10, height = 6, dpi = 400)
}
for (yr in unique_years) {
# Filter data for the current year
year_data <- final_results %>% dplyr::filter(year == yr)
# Create edge list
edges <- year_data %>%
select(from = name, to = det_id, outdegree, louvain)
# Create igraph object
g <- graph_from_data_frame(edges, directed = FALSE)
# Add edge attributes: Outdegree and Louvain membership
E(g)$weight <- edges$outdegree
E(g)$louvain <- as.factor(edges$louvain)
# Network plot for the current year
plot <- g |> ggraph(layout = "fr") +  # "fr" for Fruchterman-Reingold layout
geom_node_point(aes(size = weight), shape = 21, fill = "white", show.legend = F) +
geom_edge_link(aes(width = weight, color = louvain), alpha = 0.7) +
geom_node_text(aes(label = name), repel = TRUE, size = 2) +
scale_edge_width(range = c(0.5, 3), guide = "none") +  # Adjust edge thickness range
scale_edge_color_brewer(palette = "Set2") +  # Color edges by Louvain groups
theme_minimal() +
ggtitle(paste("Network Plot for Year", yr)) +
theme_void() +
ggpubr::theme_transparent()
ggsave(paste0("Output/", yr, ".png"), plot, width = 10, height = 6, dpi = 400)
}
# Iterate over each year to create network plots
unique_years <- unique(final_results$year)
for (yr in unique_years) {
# Filter data for the current year
year_data <- final_results %>% filter(year == yr)
# Create edge list
edges <- year_data %>%
select(from = name, to = det_id, outdegree, louvain)
# Create igraph object
g <- graph_from_data_frame(edges, directed = FALSE)
# Add edge and node attributes
V(g)$louvain <- as.factor(edges$louvain[match(V(g)$name, edges$from)])
V(g)$outdegree <- degree(g, mode = "all")
# Network plot for the current year
plot <- ggraph(g, layout = "fr") +  # Fruchterman-Reingold layout
geom_edge_link(aes(width = weight, color = as.factor(E(g)$louvain)), alpha = 0.7) +
geom_node_point(aes(size = V(g)$outdegree, color = V(g)$louvain), shape = 21, fill = "white") +
geom_node_text(aes(label = V(g)$name), repel = TRUE, size = 3) +
scale_edge_width(range = c(0.5, 3), guide = "none") +  # Adjust edge thickness range
scale_edge_color_brewer(palette = "Set2") +  # Color edges by Louvain groups
theme_minimal() +
ggtitle(paste("Network Plot for Year", yr)) +
theme_void()
# Save the plot
ggsave(paste0("Output/", yr, ".png"), plot, width = 10, height = 6, dpi = 400)
}
V(g)$outdegree <- degree(g, mode = "out")
for (yr in unique_years) {
# Filter data for the current year
year_data <- final_results %>% dplyr::filter(year == yr)
# Create edge list
edges <- year_data %>%
select(from = name, to = det_id, outdegree, louvain)
# Create igraph object
g <- graph_from_data_frame(edges, directed = FALSE)
# Add edge and node attributes
V(g)$louvain <- as.factor(edges$louvain[match(V(g)$name, edges$from)])
V(g)$outdegree <- degree(g, mode = "out")
# Network plot for the current year
plot <- ggraph(g, layout = "fr") +  # Fruchterman-Reingold layout
geom_edge_link(aes(width = weight, color = as.factor(E(g)$louvain)), alpha = 0.7) +
geom_node_point(aes(size = V(g)$outdegree, color = V(g)$louvain), shape = 21, fill = "white") +
geom_node_text(aes(label = V(g)$name), repel = TRUE, size = 3) +
scale_edge_width(range = c(0.5, 3), guide = "none") +  # Adjust edge thickness range
scale_edge_color_brewer(palette = "Set2") +  # Color edges by Louvain groups
theme_minimal() +
ggtitle(paste("Network Plot for Year", yr)) +
theme_void()
# Save the plot
ggsave(paste0("Output/", yr, ".png"), plot, width = 10, height = 6, dpi = 400)
}
g
for (yr in unique_years) {
# Filter data for the current year
year_data <- final_results %>% filter(year == yr)
# Create edge list
edges <- year_data %>%
select(from = name, to = det_id, outdegree, louvain)
# Create igraph object
g <- graph_from_data_frame(edges, directed = FALSE)
# Add edge and node attributes
E(g)$weight <- edges$outdegree  # Edge thickness
E(g)$louvain <- as.factor(edges$louvain)  # Edge Louvain
V(g)$outdegree <- degree(g, mode = "all")  # Node degree
V(g)$louvain <- as.factor(E(g)$louvain[match(V(g)$name, edges$from)])
# Network plot for the current year
plot <- ggraph(g, layout = "fr") +  # Fruchterman-Reingold layout
geom_edge_link(aes(width = weight, color = louvain), alpha = 0.7) +
geom_node_point(aes(size = outdegree, color = louvain), shape = 21, fill = "white") +
geom_node_text(aes(label = name), repel = TRUE, size = 3) +
scale_edge_width(range = c(0.5, 3), guide = "none") +  # Adjust edge thickness range
scale_edge_color_brewer(palette = "Set2") +  # Color edges by Louvain groups
theme_minimal() +
ggtitle(paste("Network Plot for Year", yr)) +
theme_void()
# Save the plot
ggsave(paste0("Output/", yr, ".png"), plot, width = 10, height = 6, dpi = 400)
}
# Iterate over each year to create network plots
unique_years <- unique(final_results$year)
for (yr in unique_years) {
# Filter data for the current year
year_data <- final_results %>% filter(year == yr)
# Create edge list
edges <- year_data %>%
select(from = name, to = det_id, outdegree, louvain)
# Create igraph object
g <- graph_from_data_frame(edges, directed = FALSE)
# Add edge and node attributes
E(g)$weight <- edges$outdegree  # Edge thickness
E(g)$louvain <- as.factor(edges$louvain)  # Edge Louvain
V(g)$outdegree <- degree(g, mode = "out")  # Node degree
V(g)$louvain <- as.factor(E(g)$louvain[match(V(g)$name, edges$from)])
# Network plot for the current year
plot <- ggraph(g, layout = "fr") +  # Fruchterman-Reingold layout
geom_edge_link(aes(width = weight, color = louvain), alpha = 0.7) +
geom_node_point(aes(size = outdegree, color = louvain), shape = 21, fill = "white") +
geom_node_text(aes(label = name), repel = TRUE, size = 3) +
scale_edge_width(range = c(0.5, 3), guide = "none") +  # Adjust edge thickness range
scale_edge_color_brewer(palette = "Set2") +  # Color edges by Louvain groups
theme_minimal() +
ggtitle(paste("Network Plot for Year", yr)) +
theme_void() + ggpubr::theme_transparent()
# Save the plot
ggsave(paste0("Output/", yr, ".png"), plot, width = 10, height = 6, dpi = 400)
}
for (yr in unique_years) {
# Filter data for the current year
year_data <- final_results %>% filter(year == yr)
# Create edge list
edges <- year_data %>%
select(from = name, to = det_id, outdegree, louvain)
# Create igraph object
g <- graph_from_data_frame(edges, directed = FALSE)
# Add edge and node attributes
E(g)$weight <- edges$outdegree  # Edge thickness
E(g)$louvain <- as.factor(edges$louvain)  # Edge Louvain
V(g)$outdegree <- degree(g, mode = "out")  # Node degree
V(g)$louvain <- as.factor(E(g)$louvain[match(V(g)$name, edges$from)])
# Network plot for the current year
plot <- ggraph(g, layout = "fr") +  # Fruchterman-Reingold layout
geom_edge_link(aes(width = weight, color = louvain), alpha = 0.7,
show.legend = F) +
geom_node_point(aes(size = outdegree, color = louvain), shape = 21,
fill = "white", show.legend = F) +
geom_node_text(aes(label = name), repel = TRUE, size = 3, show.legend = F) +
scale_edge_width(range = c(0.5, 3), guide = "none") +  # Adjust edge thickness range
scale_edge_color_brewer(palette = "Set2") +  # Color edges by Louvain groups
theme_minimal() +
ggtitle(paste("Network Plot for Year", yr)) +
theme_void() + ggpubr::theme_transparent()
# Save the plot
ggsave(paste0("Output/", yr, ".png"), plot, width = 10, height = 6, dpi = 400)
}
det_prevalence <- final_results %>%
group_by(det_id, year) %>%
summarize(
total_outdegree = sum(outdegree, na.rm = TRUE),
avg_outdegree = mean(outdegree, na.rm = TRUE),
num_perps = n_distinct(name),
.groups = "drop"
)
det_prevalence_summary <- det_prevalence %>%
group_by(det_id) %>%
summarize(
total_outdegree_overall = sum(total_outdegree, na.rm = TRUE),
avg_outdegree_overall = mean(avg_outdegree, na.rm = TRUE),
total_perps = sum(num_perps, na.rm = TRUE),
.groups = "drop"
) %>%
arrange(desc(total_outdegree_overall))
yearly_network_metrics <- final_results %>%
group_by(year) %>%
group_split() %>%
lapply(function(data) {
# Create graph
g <- graph_from_data_frame(
d = data,
directed = FALSE
)
# Calculate centrality measures
node_metrics <- data.frame(
name = V(g)$name,
degree = degree(g),
closeness = closeness(g, normalized = TRUE),
betweenness = betweenness(g, normalized = TRUE),
year = unique(data$year)
)
return(node_metrics)
}) %>%
bind_rows()
persistent_nodes <- yearly_network_metrics %>%
group_by(name) %>%
summarize(
avg_degree = mean(degree, na.rm = TRUE),
avg_closeness = mean(closeness, na.rm = TRUE),
avg_betweenness = mean(betweenness, na.rm = TRUE),
active_years = n(),
.groups = "drop"
) %>%
arrange(desc(avg_degree)) %>%
filter(active_years > 1)  # Only nodes active in multiple years
community_analysis <- final_results %>%
group_by(year) %>%
group_split() %>%
lapply(function(data) {
g <- graph_from_data_frame(data, directed = FALSE)
louvain <- cluster_louvain(g)
community_sizes <- sizes(louvain)
# Summarize community data
data.frame(
year = unique(data$year),
community_id = seq_along(community_sizes),
size = community_sizes
)
}) %>%
bind_rows()
library(ggplot2)
ggplot(det_prevalence, aes(x = year, y = total_outdegree, color = det_id)) +
geom_line() +
labs(
title = "Detention Center Outdegree Over Time",
x = "Year",
y = "Total Outdegree"
) +
theme_minimal()
ggplot(det_prevalence, aes(x = year, y = total_outdegree, color = det_id)) +
geom_line(show.legend = F) +
labs(
title = "Detention Center Outdegree Over Time",
x = "Year",
y = "Total Outdegree"
) +
theme_minimal()
network_summary <- final_results %>%
group_by(year) %>%
summarize(
avg_outdegree = mean(outdegree, na.rm = TRUE),
total_outdegree = sum(outdegree, na.rm = TRUE),
.groups = "drop"
)
ggplot(det_prevalence, aes(x = year, y = total_outdegree, color = det_id)) +
geom_line(show.legend = F) +
labs(
title = "Outdegree Over Time",
x = "Year",
y = "Total Outdegree"
) +
theme_minimal()
network_summary <- final_results %>%
group_by(year) %>%
summarize(
avg_outdegree = mean(outdegree, na.rm = TRUE),
total_outdegree = sum(outdegree, na.rm = TRUE),
.groups = "drop"
)
ggplot(network_summary, aes(x = year)) +
geom_line(aes(y = avg_outdegree, color = "Average Outdegree")) +
geom_line(aes(y = total_outdegree, color = "Total Outdegree")) +
labs(
title = "Network Outdegree Trends Over Time",
x = "Year",
y = "Outdegree"
) +
theme_minimal()
network_summary
ggplot(network_summary, aes(x = year)) +
geom_line(aes(y = avg_outdegree, color = "Average Outdegree")) +
geom_line(aes(y = log(total_outdegree), color = "Total Outdegree")) +
labs(
title = "Network Outdegree Trends Over Time",
x = "Year",
y = "Outdegree"
) +
theme_minimal()
ggplot(network_summary, aes(x = year)) +
geom_line(aes(y = avg_outdegree, color = "Average Outdegree")) +
geom_line(aes(y = log(total_outdegree), color = "Ln(Total Outdegree)")) +
labs(
title = "Network Outdegree Trends Over Time",
x = "Year",
y = "Outdegree"
) +
theme_minimal()
ggplot(network_summary, aes(x = year)) +
geom_line(aes(y = avg_outdegree, color = "Average Outdegree")) +
geom_line(aes(y = log(total_outdegree), color = "Ln(Total Outdegree)")) +
labs(
title = "Network Outdegree Trends Over Time",
x = "Year",
y = "Outdegree"
) +
theme_minimal()
ggplot(network_summary, aes(x = year)) +
geom_line(aes(y = avg_outdegree, color = "Average Outdegree")) +
geom_line(aes(y = log(total_outdegree), color = "Ln(Total Outdegree)")) +
labs(
title = "Network Outdegree Trends Over Time",
x = "Year",
y = "Outdegree"
) +
theme_minimal()
ggplot(det_prevalence, aes(x = year, y = total_outdegree, color = det_id)) +
geom_line(show.legend = F) +
labs(
title = "Outdegree Over Time",
x = "Year",
y = "Total Outdegree"
) +
theme_minimal()
